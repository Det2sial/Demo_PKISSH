SSH-ADD(1)                BSD General Commands Manual               SSH-ADD(1)

NAME
     ssh-add -- Adds private key identities to the authentication agent

SYNOPSIS
     ssh-add [-cDdkLlqvXx] [-E fingerprint_hash] [-t life] [file ...]
     ssh-add -s pkcs11
     ssh-add -e pkcs11
     ssh-add -T pubkey ...

DESCRIPTION
     ssh-add adds private key identities to the authentication agent,
     ssh-agent(1).

     For RSA, ECDSA or DSA identity may contain X.509 certificate that match
     private key. This certificate will be loaded as well.  Also identity may
     contain extra X.509 certificates.  Agent client uses those extra certifi-
     cates along with certificates from system default X.509 store to build
     chain of certificates leading to a trusted certificate authority.

     When run without arguments, it adds the files ~/.ssh/id_rsa,
     ~/.ssh/id_ecdsa, ~/.ssh/id_ed25519 and ~/.ssh/id_dsa.  After loading a
     private key, ssh-add will try to load corresponding custom certificate
     information from the filename obtained by appending -cert.pub to the name
     of the private key file.  Alternative file names can be given on the com-
     mand line.

     If any file requires a passphrase, ssh-add asks for the passphrase from
     the user.  The passphrase is read from the user's tty.  ssh-add retries
     the last passphrase if multiple identity files are given.

     The authentication agent must be running and the SSH_AUTH_SOCK environ-
     ment variable must contain the name of its socket for ssh-add to work.

     The options are as follows:

     -c      Indicates that added identities should be subject to confirmation
             before being used for authentication.  Confirmation is performed
             by ssh-askpass(1).  Successful confirmation is signaled by a zero
             exit status from ssh-askpass(1), rather than text entered into
             the requester.

     -D      Deletes all identities from the agent.

     -d      Instead of adding identities, removes identities from the agent.
             If ssh-add has been run without arguments, the keys for the
             default identities and their corresponding certificates (X.509 or
             custom) will be removed.  Otherwise, the argument list will be
             interpreted as a list of paths to public key files to specify
             keys and certificates to be removed from the agent.  If no public
             key is found at a given path, ssh-add will append .pub and retry.

     -E fingerprint_hash
             Specifies the hash algorithm used when displaying key finger-
             prints.  Valid options are: ``md5'' and ``sha256''.  The default
             is ``sha256''.

     -e pkcs11
             Remove keys provided by the PKCS#11 shared library pkcs11.

     -k      When listing X.509 certificate based identities prints public key
             instead certificate distinguished name.

             When loading keys into or deleting keys from the agent, process
             plain private keys only and skip custom certificates.  In this
             case it is ignored for X.509 certificate based identities.

     -L      Lists public key parameters of all identities currently repre-
             sented by the agent.  X.509 certificates are displayed with their
             ``Distinguished Name''.

     -l      Lists fingerprints of all identities currently represented by the
             agent.

     -q      Be quiet after a successful operation.

     -s pkcs11
             Add keys provided by the PKCS#11 shared library pkcs11.

     -T pubkey ...
             Tests whether the private keys that correspond to the specified
             pubkey files are usable by performing sign and verify operations
             on each.

     -t life
             Set a maximum lifetime when adding identities to an agent.  The
             lifetime may be specified in seconds or in a time format speci-
             fied in sshd_config(5).

     -v      Verbose mode.  Causes ssh-add to print debugging messages about
             its progress.  This is helpful in debugging problems.  Multiple
             -v options increase the verbosity.  The maximum is 3.

     -X      Unlock the agent.

     -x      Lock the agent with a password.

ENVIRONMENT
     SSH_ASKPASS
             If ssh-add needs a passphrase, it will read the passphrase from
             the current terminal if it was run from a terminal.  If ssh-add
             does not have a terminal associated with it but DISPLAY is set,
             it will execute the program specified by SSH_ASKPASS that may
             open a X11 window to read the passphrase.  Note if SSH_ASKPASS is
             not set will be executed program ssh-askpass located in
             ``libexec'' directory.  This is particularly useful when calling
             ssh-add from a .xsession or related script.  (Note that on some
             machines it may be necessary to redirect the input from /dev/null
             to make this work.)

             Remark: On Android DISPLAY is ignored and SSH_ASKPASS is pre-
             ferred over associated terminal.

     SSH_AUTH_SOCK
             Identifies the path of a UNIX-domain socket used to communicate
             with the agent.

FILES
     ~/.ssh/id_dsa
     ~/.ssh/id_ecdsa
     ~/.ssh/id_ed25519
     ~/.ssh/id_rsa
             Contains the DSA, ECDSA, Ed25519 or RSA authentication identity
             of the user.

     For RSA, ECDSA or DSA identity file may contain X.509 certificate that
     match private key and extra X.509 certificates.

     Identity files should not be readable by anyone but the user.  Note that
     ssh-add ignores identity files if they are accessible by others.

EXIT STATUS
     Exit status is 0 on success, 1 if the specified command fails, and 2 if
     ssh-add is unable to contact the authentication agent.

SEE ALSO
     ssh(1), ssh-agent(1), ssh-askpass(1), ssh-keygen(1), sshd(8)

AUTHORS
     PKIX-SSH is a derivative of the original and free ssh 1.2.12 release by
     Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo
     de Raadt and Dug Song removed many bugs, re-added newer features and cre-
     ated OpenSSH.  Markus Friedl contributed the support for SSH protocol
     versions 1.5 and 2.0.  Roumen Petrov contributed support for X.509 cer-
     tificates.

BSD                              May 11, 2020                              BSD
